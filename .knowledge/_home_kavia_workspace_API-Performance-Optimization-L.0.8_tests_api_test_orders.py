{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the order API endpoints, testing various functionalities such as retrieving, creating, updating, and deleting orders.", "external_files": ["app.core.config", "app.models.order"], "external_methods": ["httpx.AsyncClient.get", "httpx.AsyncClient.post", "httpx.AsyncClient.put", "httpx.AsyncClient.patch", "httpx.AsyncClient.delete", "sqlalchemy.ext.asyncio.AsyncSession.get"], "published": [], "classes": [], "methods": [{"name": "test_get_orders(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to get all orders.", "scope": "", "scopeKind": ""}, {"name": "test_get_orders_by_customer(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to get orders by a specific customer.", "scope": "", "scopeKind": ""}, {"name": "test_get_orders_by_status(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to get orders based on their status.", "scope": "", "scopeKind": ""}, {"name": "test_get_orders_by_date_range(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to get orders within a date range.", "scope": "", "scopeKind": ""}, {"name": "test_get_orders_by_date_range_invalid(client: AsyncClient)", "description": "Tests the endpoint with an invalid date range.", "scope": "", "scopeKind": ""}, {"name": "test_get_order(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to get a specific order by ID.", "scope": "", "scopeKind": ""}, {"name": "test_get_order_not_found(client: AsyncClient)", "description": "Tests the endpoint to get an order that does not exist.", "scope": "", "scopeKind": ""}, {"name": "test_create_order(client: AsyncClient, test_products: list)", "description": "Tests the endpoint to create a new order.", "scope": "", "scopeKind": ""}, {"name": "test_create_order_no_items(client: AsyncClient)", "description": "Tests the endpoint to create an order without any items.", "scope": "", "scopeKind": ""}, {"name": "test_update_order(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to update an existing order.", "scope": "", "scopeKind": ""}, {"name": "test_update_order_not_found(client: AsyncClient)", "description": "Tests the endpoint to update an order that does not exist.", "scope": "", "scopeKind": ""}, {"name": "test_update_order_status(client: AsyncClient, test_orders: list)", "description": "Tests the endpoint to update the status of an order.", "scope": "", "scopeKind": ""}, {"name": "test_update_order_status_not_found(client: AsyncClient)", "description": "Tests the endpoint to update the status of a non-existing order.", "scope": "", "scopeKind": ""}, {"name": "test_delete_order(client: AsyncClient, test_orders: list, db_session: AsyncSession)", "description": "Tests the endpoint to delete an existing order.", "scope": "", "scopeKind": ""}, {"name": "test_delete_order_not_found(client: AsyncClient)", "description": "Tests the endpoint to delete an order that does not exist.", "scope": "", "scopeKind": ""}], "calls": ["httpx.AsyncClient.get", "httpx.AsyncClient.post", "httpx.AsyncClient.put", "httpx.AsyncClient.patch", "httpx.AsyncClient.delete", "sqlalchemy.ext.asyncio.AsyncSession.get"], "search-terms": ["order API tests", "asynchronous order testing", "pytest order tests"], "state": 2, "file_id": 39, "knowledge_revision": 99, "git_revision": "", "ctags": [{"_type": "tag", "name": "test_create_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_create_order(client: AsyncClient, test_products: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_products: list)"}, {"_type": "tag", "name": "test_create_order_no_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_create_order_no_items(client: AsyncClient):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient)"}, {"_type": "tag", "name": "test_delete_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_delete_order(client: AsyncClient, test_orders: list, db_session: AsyncSession):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list, db_session: AsyncSession)"}, {"_type": "tag", "name": "test_delete_order_not_found", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_delete_order_not_found(client: AsyncClient):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient)"}, {"_type": "tag", "name": "test_get_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_order(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_get_order_not_found", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_order_not_found(client: AsyncClient):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient)"}, {"_type": "tag", "name": "test_get_orders", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_orders(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_get_orders_by_customer", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_orders_by_customer(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_get_orders_by_date_range", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_orders_by_date_range(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_get_orders_by_date_range_invalid", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_orders_by_date_range_invalid(client: AsyncClient):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient)"}, {"_type": "tag", "name": "test_get_orders_by_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_get_orders_by_status(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_update_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_update_order(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_update_order_not_found", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_update_order_not_found(client: AsyncClient):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient)"}, {"_type": "tag", "name": "test_update_order_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_update_order_status(client: AsyncClient, test_orders: list):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient, test_orders: list)"}, {"_type": "tag", "name": "test_update_order_status_not_found", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "pattern": "/^async def test_update_order_status_not_found(client: AsyncClient):$/", "language": "Python", "kind": "function", "signature": "(client: AsyncClient)"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/api/test_orders.py", "hash": "20959be5812e13514b0600479afc744f", "format-version": 4, "code-base-name": "default", "revision_history": [{"99": ""}]}