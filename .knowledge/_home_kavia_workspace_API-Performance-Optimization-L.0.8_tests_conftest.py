{"is_source_file": true, "format": "Python", "description": "Test fixtures for API Performance Optimization, providing setup for database and API testing using pytest and FastAPI.", "external_files": ["app.api.deps", "app.core.config", "app.db.base", "app.models", "app.main"], "external_methods": ["app.api.deps.get_db", "app.main.create_application"], "published": [], "classes": [], "methods": [{"name": "AsyncGenerator[AsyncEngine,None] test_engine()", "description": "Creates a test database engine, ensuring it uses an in-memory SQLite database for testing.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncSession,None] db_session(test_engine: AsyncEngine)", "description": "Creates a test database session for each test, ensuring a clean state and isolating tests.", "scope": "", "scopeKind": ""}, {"name": "FastAPI app(db_session: AsyncSession)", "description": "Creates a test FastAPI application, overriding dependencies to use test resources.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncClient,None] client(app: FastAPI)", "description": "Creates a test client for the FastAPI application to perform API testing.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[list,None] test_products(db_session: AsyncSession)", "description": "Creates test products to be used in database tests.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[list,None] test_orders(db_session: AsyncSession, test_products: list)", "description": "Creates test orders, including order items, to be used in database tests.", "scope": "", "scopeKind": ""}, {"name": "AsyncGenerator[AsyncSession,None] override_get_db()", "scope": "app", "scopeKind": "function", "description": "unavailable"}], "calls": ["create_async_engine", "inspect", "Base.metadata.drop_all", "Base.metadata.create_all", "AsyncSession", "yield", "db_session.commit", "db_session.refresh"], "search-terms": ["API Performance Optimization", "pytest fixtures"], "state": 2, "file_id": 37, "knowledge_revision": 247, "git_revision": "3a8fb70094c6b377cad506eab3fcd531f0ddcd40", "revision_history": [{"95": ""}, {"100": ""}, {"101": ""}, {"107": "2112e7b6e9c1da1c187ac87f2e5669af04e38ead"}, {"109": "2112e7b6e9c1da1c187ac87f2e5669af04e38ead"}, {"110": "2112e7b6e9c1da1c187ac87f2e5669af04e38ead"}, {"113": "df757bb51613bac28bf49c666e1993d0585bbf2e"}, {"114": "df757bb51613bac28bf49c666e1993d0585bbf2e"}, {"121": "df757bb51613bac28bf49c666e1993d0585bbf2e"}, {"123": "df757bb51613bac28bf49c666e1993d0585bbf2e"}, {"127": "db26009eb51c1d1e59dfe8e186759e95d4f68e57"}, {"169": "a15e52cdf83686d94b96d45a1957085ae53f782e"}, {"196": "233aed965db0f003e7956bc5d812b279ad6b9f26"}, {"197": "623d4693516a9c0249316895de6c52edad714060"}, {"199": "623d4693516a9c0249316895de6c52edad714060"}, {"201": "2d1314e813de3cd97293401ee5f4c2ea96697e51"}, {"202": "2d1314e813de3cd97293401ee5f4c2ea96697e51"}, {"203": "2d1314e813de3cd97293401ee5f4c2ea96697e51"}, {"204": "2d1314e813de3cd97293401ee5f4c2ea96697e51"}, {"205": "afb74b951100874c2c383acac634e6c19223c613"}, {"213": "cbf628f343828cfdd36890a0c9b59311cb18ad43"}, {"214": "cbf628f343828cfdd36890a0c9b59311cb18ad43"}, {"215": "cbf628f343828cfdd36890a0c9b59311cb18ad43"}, {"245": "3a8fb70094c6b377cad506eab3fcd531f0ddcd40"}, {"246": "3a8fb70094c6b377cad506eab3fcd531f0ddcd40"}, {"247": "3a8fb70094c6b377cad506eab3fcd531f0ddcd40"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^async def app(db_session: AsyncSession) -> FastAPI:$/", "language": "Python", "typeref": "typename:FastAPI", "kind": "function", "signature": "(db_session: AsyncSession)"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^async def client(app: FastAPI) -> AsyncGenerator[AsyncClient, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncClient,None]", "kind": "function", "signature": "(app: FastAPI)"}, {"_type": "tag", "name": "db_session", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^async def db_session(test_engine: AsyncEngine) -> AsyncGenerator[AsyncSession, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "(test_engine: AsyncEngine)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "override_get_db", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^    async def override_get_db() -> AsyncGenerator[AsyncSession, None]:$/", "file": true, "language": "Python", "typeref": "typename:AsyncGenerator[AsyncSession,None]", "kind": "function", "signature": "()", "scope": "app", "scopeKind": "function"}, {"_type": "tag", "name": "test_engine", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^async def test_engine() -> AsyncGenerator[AsyncEngine, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[AsyncEngine,None]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_orders", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^async def test_orders(db_session: AsyncSession, test_products: list) -> AsyncGenerator[list, Non/", "language": "Python", "typeref": "typename:AsyncGenerator[list,None]", "kind": "function", "signature": "(db_session: AsyncSession, test_products: list)"}, {"_type": "tag", "name": "test_products", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "pattern": "/^async def test_products(db_session: AsyncSession) -> AsyncGenerator[list, None]:$/", "language": "Python", "typeref": "typename:AsyncGenerator[list,None]", "kind": "function", "signature": "(db_session: AsyncSession)"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/tests/conftest.py", "hash": "0b2b8d8add4c789871ed1653c1989921", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}