{"is_source_file": true, "format": "Python", "description": "This module provides a Redis-based caching implementation, including TTL management and cache invalidation strategies, along with a decorator for caching API endpoint responses.", "external_files": ["app.core.config"], "external_methods": ["redis.asyncio.Redis"], "published": ["cache", "invalidate_cache", "get_redis_cache"], "classes": [{"name": "RedisCache", "description": "A singleton Redis cache manager that provides methods for caching, initializing and closing a Redis connection, and managing cache keys with serialization."}], "methods": [{"name": "None initialize(self)", "description": "Initializes the Redis connection pool using settings from the configuration.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "None close(self)", "description": "Closes the Redis connection pool.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "Optional[Any] get(self, key: str)", "description": "Retrieves a value from the cache based on the provided key.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "bool set( self, key: str, value: Any, expire: Optional[int] = None )", "description": "Stores a value in the cache with an optional expiration time.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "bool delete(self, key: str)", "description": "Deletes a value from the cache using the provided key.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "int delete_pattern(self, pattern: str)", "description": "Deletes all cache entries matching a specified pattern.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "bool exists(self, key: str)", "description": "Checks if a key exists in the cache.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "int ttl(self, key: str)", "description": "Gets the remaining time to live for a specific cache key.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "bool set_ttl(self, key: str, expire: int)", "description": "Sets the expiration time for a specific cache key.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "bool clear_all(self)", "description": "Clears all entries from the cache.", "scope": "RedisCache", "scopeKind": "class"}, {"name": "str generate_cache_key( prefix: str, *args: CacheKeyType, **kwargs: CacheKeyType )", "description": "Generates a unique cache key based on the given prefix and parameters.", "scope": "", "scopeKind": ""}, {"name": "\"RedisCache\" __new__(cls)", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "Any _deserialize(self, value: str)", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "str _serialize(self, value: Any)", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "Callable cache( expire: Optional[int] = None, prefix: Optional[str] = None, include_query_params: bool = True, include_path_params: bool = True, )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "redis.Redis client(self)", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "Callable decorator(func: Callable)", "scope": "invalidate_cache", "scopeKind": "function", "description": "unavailable"}, {"name": "RedisCache get_redis_cache()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Callable invalidate_cache(pattern: str)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Any wrapper(*args: Any, **kwargs: Any)", "scope": "invalidate_cache.decorator", "scopeKind": "function", "description": "unavailable"}], "calls": ["redis_cache.initialize", "redis_cache.get", "redis_cache.set", "redis_cache.delete", "redis_cache.delete_pattern", "redis_cache.exists", "redis_cache.ttl", "redis_cache.set_ttl", "redis_cache.clear_all"], "search-terms": ["Redis", "cache key", "TTL management", "cache invalidation", "FastAPI decorator"], "state": 2, "file_id": 28, "knowledge_revision": 177, "git_revision": "3ca38c1a5bb82a63be25191740c83663bd590a04", "revision_history": [{"63": ""}, {"176": "3ca38c1a5bb82a63be25191740c83663bd590a04"}, {"177": "3ca38c1a5bb82a63be25191740c83663bd590a04"}], "ctags": [{"_type": "tag", "name": "CacheKey", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^CacheKey = str$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CacheKeyType", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^CacheKeyType = Union[str, int, float, bool, Tuple, List, Dict, BaseModel, Enum, None]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "CacheValue", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^CacheValue = Union[str, bytes, int, float, bool, Dict[str, Any], List[Any], None]$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "RedisCache", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^class RedisCache:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "T", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^T = TypeVar(\"T\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "__new__", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    def __new__(cls) -> \"RedisCache\":$/", "language": "Python", "typeref": "typename:\"RedisCache\"", "kind": "member", "signature": "(cls)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "_deserialize", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    def _deserialize(self, value: str) -> Any:$/", "language": "Python", "typeref": "typename:Any", "kind": "member", "signature": "(self, value: str)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "_initialized", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    _initialized: bool = False$/", "language": "Python", "typeref": "typename:bool", "kind": "variable", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "_instance", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    _instance: Optional[\"RedisCache\"] = None$/", "language": "Python", "typeref": "typename:Optional[\"RedisCache\"]", "kind": "variable", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "_redis_client", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    _redis_client: Optional[redis.Redis] = None$/", "language": "Python", "typeref": "typename:Optional[redis.Redis]", "kind": "variable", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "_serialize", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    def _serialize(self, value: Any) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self, value: Any)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "cache", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^def cache($/", "language": "Python", "typeref": "typename:Callable", "kind": "function", "signature": "( expire: Optional[int] = None, prefix: Optional[str] = None, include_query_params: bool = True, include_path_params: bool = True, )"}, {"_type": "tag", "name": "clear_all", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def clear_all(self) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "client", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    def client(self) -> redis.Redis:$/", "language": "Python", "typeref": "typename:redis.Redis", "kind": "member", "signature": "(self)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "close", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def close(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "decorator", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    def decorator(func: Callable) -> Callable:$/", "file": true, "language": "Python", "typeref": "typename:Callable", "kind": "function", "signature": "(func: Callable)", "scope": "cache", "scopeKind": "function"}, {"_type": "tag", "name": "decorator", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    def decorator(func: Callable) -> Callable:$/", "file": true, "language": "Python", "typeref": "typename:Callable", "kind": "function", "signature": "(func: Callable)", "scope": "invalidate_cache", "scopeKind": "function"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def delete(self, key: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, key: str)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "delete_pattern", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def delete_pattern(self, pattern: str) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self, pattern: str)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "exists", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def exists(self, key: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, key: str)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "generate_cache_key", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^def generate_cache_key($/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "( prefix: str, *args: CacheKeyType, **kwargs: CacheKeyType )"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def get(self, key: str) -> Optional[Any]:$/", "language": "Python", "typeref": "typename:Optional[Any]", "kind": "member", "signature": "(self, key: str)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "get_redis_cache", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^async def get_redis_cache() -> RedisCache:$/", "language": "Python", "typeref": "typename:RedisCache", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "initialize", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def initialize(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "invalidate_cache", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^def invalidate_cache(pattern: str) -> Callable:$/", "language": "Python", "typeref": "typename:Callable", "kind": "function", "signature": "(pattern: str)"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "redis", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^import redis.asyncio as redis$/", "language": "Python", "kind": "namespace", "nameref": "module:redis.asyncio"}, {"_type": "tag", "name": "redis_cache", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^redis_cache = RedisCache()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "set", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def set($/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "( self, key: str, value: Any, expire: Optional[int] = None )", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "set_ttl", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def set_ttl(self, key: str, expire: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, key: str, expire: int)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "ttl", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^    async def ttl(self, key: str) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self, key: str)", "scope": "RedisCache", "scopeKind": "class"}, {"_type": "tag", "name": "wrapper", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^        async def wrapper(*args: Any, **kwargs: Any) -> Any:$/", "file": true, "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "(*args: Any, **kwargs: Any)", "scope": "cache.decorator", "scopeKind": "function"}, {"_type": "tag", "name": "wrapper", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "pattern": "/^        async def wrapper(*args: Any, **kwargs: Any) -> Any:$/", "file": true, "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "(*args: Any, **kwargs: Any)", "scope": "invalidate_cache.decorator", "scopeKind": "function"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/core/cache.py", "hash": "3165ec4dd83525e9042cf437ef6301be", "format-version": 4, "code-base-name": "default", "fields": [{"name": "CacheKey = str", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CacheKeyType = Union[str, int, float, bool, Tuple, List, Dict, BaseModel, Enum, None]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "CacheValue = Union[str, bytes, int, float, bool, Dict[str, Any], List[Any], None]", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "T = TypeVar(\"T\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "bool _initialized", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[\"RedisCache\"] _instance", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[redis.Redis] _redis_client", "scope": "RedisCache", "scopeKind": "class", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "redis_cache = RedisCache()", "scope": "", "scopeKind": "", "description": "unavailable"}]}