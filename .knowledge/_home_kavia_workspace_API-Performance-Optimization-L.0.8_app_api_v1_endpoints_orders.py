{"is_source_file": true, "format": "Python", "description": "This module defines the API endpoints for order operations including creation, retrieval, updating, and deletion of orders.", "external_files": ["app/api/deps", "app/core/rate_limit", "app/crud/order", "app/models/order", "app/schemas/order"], "external_methods": ["get_db", "get_pagination_params", "handle_db_exceptions", "rate_limit", "order.get_multi", "order.get_by_customer", "order.get_by_status", "order.get_by_date_range", "order.get_with_items", "order.create_with_items", "order.update", "order.update_status", "order.remove"], "published": ["get_orders", "get_orders_by_customer", "get_orders_by_status", "get_orders_by_date_range", "get_order", "create_order", "update_order", "update_order_status", "delete_order"], "classes": [], "methods": [{"name": "Any get_orders( request: Request, db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )", "description": "Retrieve a list of all orders with pagination.", "scope": "", "scopeKind": ""}, {"name": "Any get_orders_by_customer( request: Request, customer_id: int = Path(..., description=\"Customer ID\"), db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )", "description": "Retrieve a list of orders for a specific customer with pagination.", "scope": "", "scopeKind": ""}, {"name": "Any get_orders_by_status( request: Request, status: OrderStatus = Path(..., description=\"Order status\"), db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )", "description": "Retrieve a list of orders with a specific status with pagination.", "scope": "", "scopeKind": ""}, {"name": "Any get_orders_by_date_range( request: Request, start_date: datetime = Query(..., description=\"Start date (ISO format)\"), end_date: datetime = Query(..., description=\"End date (ISO format)\"), db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )", "description": "Retrieve a list of orders within a specific date range with pagination.", "scope": "", "scopeKind": ""}, {"name": "Any get_order( request: Request, order_id: int = Path(..., description=\"Order ID\"), db: AsyncSession = Depends(get_db) )", "description": "Retrieve an order by its ID with its items.", "scope": "", "scopeKind": ""}, {"name": "Any create_order( request: Request, order_in: OrderCreate, db: AsyncSession = Depends(get_db) )", "description": "Create a new order with items.", "scope": "", "scopeKind": ""}, {"name": "Any update_order( request: Request, order_in: OrderUpdate, order_id: int = Path(..., description=\"Order ID\"), db: AsyncSession = Depends(get_db) )", "description": "Update an order by its ID.", "scope": "", "scopeKind": ""}, {"name": "Any update_order_status( request: Request, order_id: int = Path(..., description=\"Order ID\"), status: OrderStatus = Query(..., description=\"New order status\"), db: AsyncSession = Depends(get_db) )", "description": "Update an order's status.", "scope": "", "scopeKind": ""}, {"name": "None delete_order( request: Request, order_id: int = Path(..., description=\"Order ID\"), db: AsyncSession = Depends(get_db) )", "description": "Delete an order by its ID.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "get_pagination_params", "handle_db_exceptions", "rate_limit", "order.get_multi", "order.get_by_customer", "order.get_by_status", "order.get_by_date_range", "order.get_with_items", "order.create_with_items", "order.update", "order.update_status", "order.remove"], "search-terms": ["order API", "order endpoints", "FastAPI orders"], "state": 2, "file_id": 27, "knowledge_revision": 152, "git_revision": "0984669f42e62abb834a1a125ba6194fb82914c5", "revision_history": [{"60": ""}, {"134": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"135": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"136": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"137": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"138": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"139": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"140": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"141": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"142": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"143": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"144": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"145": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"146": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"147": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"148": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"149": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"150": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"151": "0984669f42e62abb834a1a125ba6194fb82914c5"}, {"152": "0984669f42e62abb834a1a125ba6194fb82914c5"}], "ctags": [{"_type": "tag", "name": "create_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def create_order($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, order_in: OrderCreate, db: AsyncSession = Depends(get_db) )"}, {"_type": "tag", "name": "delete_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def delete_order($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( request: Request, order_id: int = Path(..., description=\"Order ID\"), db: AsyncSession = Depends(get_db) )"}, {"_type": "tag", "name": "get_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def get_order($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, order_id: int = Path(..., description=\"Order ID\"), db: AsyncSession = Depends(get_db) )"}, {"_type": "tag", "name": "get_orders", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def get_orders($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )"}, {"_type": "tag", "name": "get_orders_by_customer", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def get_orders_by_customer($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, customer_id: int = Path(..., description=\"Customer ID\"), db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )"}, {"_type": "tag", "name": "get_orders_by_date_range", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def get_orders_by_date_range($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, start_date: datetime = Query(..., description=\"Start date (ISO format)\"), end_date: datetime = Query(..., description=\"End date (ISO format)\"), db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )"}, {"_type": "tag", "name": "get_orders_by_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def get_orders_by_status($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, status: OrderStatus = Path(..., description=\"Order status\"), db: AsyncSession = Depends(get_db), pagination: dict = Depends(get_pagination_params) )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def update_order($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, order_in: OrderUpdate, order_id: int = Path(..., description=\"Order ID\"), db: AsyncSession = Depends(get_db) )"}, {"_type": "tag", "name": "update_order_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "pattern": "/^async def update_order_status($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( request: Request, order_id: int = Path(..., description=\"Order ID\"), status: OrderStatus = Query(..., description=\"New order status\"), db: AsyncSession = Depends(get_db) )"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/api/v1/endpoints/orders.py", "hash": "3931a7dc0305f51c6cfadcf0fc88f863", "format-version": 4, "code-base-name": "default", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}