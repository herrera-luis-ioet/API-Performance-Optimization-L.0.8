{"is_source_file": true, "format": "Python", "description": "Defines CRUD operations for the Product model, extending BaseCRUD with methods specific to product management.", "external_files": ["app/crud/base.py", "app/models/product.py", "app/schemas/product.py"], "external_methods": ["BaseCRUD.get", "AsyncSession.commit", "AsyncSession.execute", "AsyncSession.refresh", "AsyncSession.rollback"], "published": ["ProductCRUD", "get_by_sku", "get_by_category", "update_stock", "get_active"], "classes": [{"name": "ProductCRUD", "description": "CRUD operations for Product model, allowing for retrieval, updating, and management of product entities."}], "methods": [{"name": "Optional[Product] get_by_sku(self, db: AsyncSession, *, sku: str)", "description": "Fetch a product by its SKU from the database.", "scope": "ProductCRUD", "scopeKind": "class"}, {"name": "List[Product] get_by_category( self, db: AsyncSession, *, category: str, skip: int = 0, limit: int = 100 )", "description": "Retrieve a list of products that belong to a specific category with pagination support.", "scope": "ProductCRUD", "scopeKind": "class"}, {"name": "Optional[Product] update_stock( self, db: AsyncSession, *, product_id: int, quantity_change: int )", "description": "Update the stock quantity of a product identified by its ID, allowing for increases or decreases.", "scope": "ProductCRUD", "scopeKind": "class"}, {"name": "List[Product] get_active( self, db: AsyncSession, *, skip: int = 0, limit: int = 100 )", "description": "Get a list of active products in the database with pagination.", "scope": "ProductCRUD", "scopeKind": "class"}], "calls": ["select", "BaseCRUD.get", "AsyncSession.execute", "AsyncSession.commit", "AsyncSession.refresh", "AsyncSession.rollback"], "search-terms": ["ProductCRUD", "CRUD", "product management", "SKU", "category", "stock quantity"], "state": 2, "file_id": 22, "knowledge_revision": 49, "git_revision": "", "ctags": [{"_type": "tag", "name": "ProductCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^class ProductCRUD(BaseCRUD[Product, ProductCreate, ProductUpdate, ProductRead]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "get_active", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^    async def get_active($/", "language": "Python", "typeref": "typename:List[Product]", "kind": "member", "signature": "( self, db: AsyncSession, *, skip: int = 0, limit: int = 100 )", "scope": "ProductCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_category", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^    async def get_by_category($/", "language": "Python", "typeref": "typename:List[Product]", "kind": "member", "signature": "( self, db: AsyncSession, *, category: str, skip: int = 0, limit: int = 100 )", "scope": "ProductCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_sku", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^    async def get_by_sku(self, db: AsyncSession, *, sku: str) -> Optional[Product]:$/", "language": "Python", "typeref": "typename:Optional[Product]", "kind": "member", "signature": "(self, db: AsyncSession, *, sku: str)", "scope": "ProductCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "product", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^product = ProductCRUD(Product)/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_stock", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "pattern": "/^    async def update_stock($/", "language": "Python", "typeref": "typename:Optional[Product]", "kind": "member", "signature": "( self, db: AsyncSession, *, product_id: int, quantity_change: int )", "scope": "ProductCRUD", "scopeKind": "class"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/product.py", "hash": "0b0ea0fcf31b9d56fd4ff624b540ceb5", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "product = ProductCRUD(Product)/", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"49": ""}]}