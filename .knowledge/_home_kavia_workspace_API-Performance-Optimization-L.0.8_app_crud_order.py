{"is_source_file": true, "format": "Python", "description": "This file contains CRUD operations for the Order and OrderItem models, including asynchronous methods for creating, retrieving, updating, and managing orders and their items in a database using SQLAlchemy.", "external_files": ["app/crud/base", "app/models/order", "app/schemas/order"], "external_methods": [], "published": ["OrderCRUD", "OrderItemCRUD", "create_with_items", "get_with_items", "update_status", "get_by_customer", "get_by_status", "get_by_date_range", "get_by_order", "get_by_product"], "classes": [{"name": "OrderCRUD", "description": "Handles CRUD operations for the Order model."}, {"name": "OrderItemCRUD", "description": "Handles CRUD operations for the OrderItem model."}], "methods": [{"name": "Order create_with_items( self, db: AsyncSession, *, obj_in: OrderCreate )", "description": "Creates a new order along with its associated items.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "Optional[Order] get_with_items( self, db: AsyncSession, *, order_id: int )", "description": "Retrieves an order and its associated items based on the order ID.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "Optional[Order] update_status( self, db: AsyncSession, *, order_id: int, status: OrderStatus )", "description": "Updates the status of an existing order.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_customer( self, db: AsyncSession, *, customer_id: int, skip: int = 0, limit: int = 100 )", "description": "Retrieves orders for a specific customer with pagination.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_status( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "description": "Retrieves orders with a specific status with pagination.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_date_range( self, db: AsyncSession, *, start_date: datetime, end_date: datetime, skip: int = 0, limit: int = 100 )", "description": "Retrieves orders within a specified date range with pagination.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[OrderItem] get_by_order( self, db: AsyncSession, *, order_id: int )", "description": "Retrieves all items for a specific order.", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"name": "List[OrderItem] get_by_product( self, db: AsyncSession, *, product_id: int, skip: int = 0, limit: int = 100 )", "description": "Retrieves all order items for a specific product with pagination.", "scope": "OrderItemCRUD", "scopeKind": "class"}], "calls": ["db.begin", "db.flush", "db.commit", "db.refresh", "db.rollback", "logging.getLogger"], "search-terms": ["OrderCRUD", "OrderItemCRUD", "CRUD operations", "asynchronous database operations"], "state": 2, "file_id": 23, "knowledge_revision": 51, "git_revision": "", "ctags": [{"_type": "tag", "name": "OrderCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^class OrderCRUD(BaseCRUD[Order, OrderCreate, OrderUpdate, OrderRead]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "OrderItemCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^class OrderItemCRUD(BaseCRUD[OrderItem, OrderItemCreate, Dict[str, Any], Dict[str, Any]]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_with_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def create_with_items($/", "language": "Python", "typeref": "typename:Order", "kind": "member", "signature": "( self, db: AsyncSession, *, obj_in: OrderCreate )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_customer", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_customer($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, customer_id: int, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_date_range", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_date_range($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, start_date: datetime, end_date: datetime, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_order($/", "language": "Python", "typeref": "typename:List[OrderItem]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int )", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_product", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_product($/", "language": "Python", "typeref": "typename:List[OrderItem]", "kind": "member", "signature": "( self, db: AsyncSession, *, product_id: int, skip: int = 0, limit: int = 100 )", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_status($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_with_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_with_items($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^order = OrderCRUD(Order)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order_item", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^order_item = OrderItemCRUD(OrderItem)/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def update_status($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int, status: OrderStatus )", "scope": "OrderCRUD", "scopeKind": "class"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "hash": "193eec642463b0d9d5bc59cd844cff88", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order = OrderCRUD(Order)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order_item = OrderItemCRUD(OrderItem)/", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"51": ""}]}