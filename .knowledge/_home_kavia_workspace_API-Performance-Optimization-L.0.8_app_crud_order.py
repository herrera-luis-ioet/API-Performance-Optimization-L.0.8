{"is_source_file": true, "format": "Python", "description": "This file contains CRUD operations for Order and OrderItem models, integrating with a database using SQLAlchemy. It defines business logic around creating, reading, updating, and managing orders and their associated items.", "external_files": ["app/crud/base", "app/crud/product", "app/models/order", "app/schemas/order"], "external_methods": ["product_crud.get"], "published": ["OrderCRUD", "OrderItemCRUD", "order", "order_item"], "classes": [{"name": "OrderCRUD", "description": "Handles CRUD operations specific to Order model, extending the BaseCRUD class."}, {"name": "OrderItemCRUD", "description": "Handles CRUD operations specific to OrderItem model, extending the BaseCRUD class."}], "methods": [{"name": "Order create_with_items( self, db: AsyncSession, *, obj_in: OrderCreate )", "description": "Creates a new order along with its associated items.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "Optional[Order] get_with_items( self, db: AsyncSession, *, order_id: int )", "description": "Retrieves an order along with its items based on order id.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "Optional[Order] update_status( self, db: AsyncSession, *, order_id: int, status: OrderStatus )", "description": "Updates the status of a specified order.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_customer( self, db: AsyncSession, *, customer_id: int, skip: int = 0, limit: int = 100 )", "description": "Fetches orders associated with a specific customer, supports pagination.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_status( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "description": "Retrieves orders filtered by their status, supports pagination.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_date_range( self, db: AsyncSession, *, start_date: datetime, end_date: datetime, skip: int = 0, limit: int = 100 )", "description": "Fetches orders within a specified date range, supports pagination.", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[OrderItem] get_by_order( self, db: AsyncSession, *, order_id: int )", "description": "Fetches all items for a specific order.", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"name": "List[OrderItem] get_by_product( self, db: AsyncSession, *, product_id: int, skip: int = 0, limit: int = 100 )", "description": "Fetches all order items linked to a specific product, supports pagination.", "scope": "OrderItemCRUD", "scopeKind": "class"}], "calls": ["product_crud.get"], "search-terms": ["OrderCRUD", "OrderItemCRUD", "create_with_items", "get_with_items", "update_status"], "state": 2, "file_id": 23, "knowledge_revision": 183, "git_revision": "3575e33714cb2e0d31b29d230e901a563e7bbbcd", "revision_history": [{"51": ""}, {"182": "3575e33714cb2e0d31b29d230e901a563e7bbbcd"}, {"183": "3575e33714cb2e0d31b29d230e901a563e7bbbcd"}], "ctags": [{"_type": "tag", "name": "OrderCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^class OrderCRUD(BaseCRUD[Order, OrderCreate, OrderUpdate, OrderRead]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "OrderItemCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^class OrderItemCRUD(BaseCRUD[OrderItem, OrderItemCreate, Dict[str, Any], Dict[str, Any]]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_with_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def create_with_items($/", "language": "Python", "typeref": "typename:Order", "kind": "member", "signature": "( self, db: AsyncSession, *, obj_in: OrderCreate )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_customer", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_customer($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, customer_id: int, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_date_range", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_date_range($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, start_date: datetime, end_date: datetime, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_order($/", "language": "Python", "typeref": "typename:List[OrderItem]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int )", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_product", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_product($/", "language": "Python", "typeref": "typename:List[OrderItem]", "kind": "member", "signature": "( self, db: AsyncSession, *, product_id: int, skip: int = 0, limit: int = 100 )", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_status($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_with_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_with_items($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^order = OrderCRUD(Order)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order_item", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^order_item = OrderItemCRUD(OrderItem)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "product_crud", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^from app.crud.product import product as product_crud$/", "language": "Python", "kind": "unknown", "nameref": "unknown:product"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def update_status($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int, status: OrderStatus )", "scope": "OrderCRUD", "scopeKind": "class"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "hash": "4e592a3ae0af11df90b3c157678d7d29", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order = OrderCRUD(Order)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order_item = OrderItemCRUD(OrderItem)", "scope": "", "scopeKind": "", "description": "unavailable"}]}