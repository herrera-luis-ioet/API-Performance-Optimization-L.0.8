{"is_source_file": true, "format": "Python", "description": "This file defines CRUD operations for Order and OrderItem models in an asynchronous context using SQLAlchemy. It contains methods to create, read, update, and delete orders and their items with additional functionalities like filtering by customer or order status.", "external_files": ["app/crud/base", "app/crud/product", "app/models/order", "app/schemas/order"], "external_methods": ["product_crud.get"], "published": ["order", "order_item"], "classes": [{"name": "OrderCRUD", "description": "Class to handle CRUD operations specifically for the Order model, extending BaseCRUD. It includes methods for creating orders, retrieving orders by various criteria, and updating order status."}, {"name": "OrderItemCRUD", "description": "Class to handle CRUD operations specifically for the OrderItem model, extending BaseCRUD. It provides methods for retrieving order items based on product and order ID."}], "methods": [{"name": "Order create_with_items( self, db: AsyncSession, *, obj_in: OrderCreate )", "description": "Creates a new order with its items based on the provided data.", "visibility": "public", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "Optional[Order] get_with_items( self, db: AsyncSession, *, order_id: int )", "description": "Retrieves an order with its associated items based on the order ID.", "visibility": "public", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "Optional[Order] update_status( self, db: AsyncSession, *, order_id: int, status: OrderStatus )", "description": "Updates the status of a specified order.", "visibility": "public", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_customer( self, db: AsyncSession, *, customer_id: int, skip: int = 0, limit: int = 100 )", "description": "Retrieves a list of orders for a specified customer with pagination.", "visibility": "public", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_status( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "description": "Retrieves a list of orders by their status with pagination.", "visibility": "public", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[Order] get_by_date_range( self, db: AsyncSession, *, start_date: datetime, end_date: datetime, skip: int = 0, limit: int = 100 )", "description": "Retrieves orders within a specified date range with pagination.", "visibility": "public", "scope": "OrderCRUD", "scopeKind": "class"}, {"name": "List[OrderItem] get_by_order( self, db: AsyncSession, *, order_id: int )", "description": "Retrieves all items for a specific order.", "visibility": "public", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"name": "List[OrderItem] get_by_product( self, db: AsyncSession, *, product_id: int, skip: int = 0, limit: int = 100 )", "description": "Retrieves all order items for a specific product with pagination.", "visibility": "public", "scope": "OrderItemCRUD", "scopeKind": "class"}], "calls": ["product_crud.get"], "search-terms": ["OrderCRUD", "OrderItemCRUD", "create_with_items", "get_with_items", "update_status"], "state": 2, "file_id": 23, "knowledge_revision": 198, "git_revision": "2dd0e5e39d0d401b4a3f336791757940bba3d2f2", "revision_history": [{"51": ""}, {"182": "3575e33714cb2e0d31b29d230e901a563e7bbbcd"}, {"183": "3575e33714cb2e0d31b29d230e901a563e7bbbcd"}, {"184": "a80b08308bb7683617c3e0b412585b0d9a581a9e"}, {"185": "a80b08308bb7683617c3e0b412585b0d9a581a9e"}, {"195": "d5f2268a1cf678420a4f54cc8eec06ad60fdc1f3"}, {"198": "2dd0e5e39d0d401b4a3f336791757940bba3d2f2"}], "ctags": [{"_type": "tag", "name": "OrderCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^class OrderCRUD(BaseCRUD[Order, OrderCreate, OrderUpdate, OrderRead]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "OrderItemCRUD", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^class OrderItemCRUD(BaseCRUD[OrderItem, OrderItemCreate, Dict[str, Any], Dict[str, Any]]):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "create_with_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def create_with_items($/", "language": "Python", "typeref": "typename:Order", "kind": "member", "signature": "( self, db: AsyncSession, *, obj_in: OrderCreate )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_customer", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_customer($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, customer_id: int, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_date_range", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_date_range($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, start_date: datetime, end_date: datetime, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_order($/", "language": "Python", "typeref": "typename:List[OrderItem]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int )", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_product", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_product($/", "language": "Python", "typeref": "typename:List[OrderItem]", "kind": "member", "signature": "( self, db: AsyncSession, *, product_id: int, skip: int = 0, limit: int = 100 )", "scope": "OrderItemCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_by_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_by_status($/", "language": "Python", "typeref": "typename:List[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, status: OrderStatus, skip: int = 0, limit: int = 100 )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "get_with_items", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def get_with_items($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int )", "scope": "OrderCRUD", "scopeKind": "class"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^order = OrderCRUD(Order)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "order_item", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^order_item = OrderItemCRUD(OrderItem)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "product_crud", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^from app.crud.product import product as product_crud$/", "language": "Python", "kind": "unknown", "nameref": "unknown:product"}, {"_type": "tag", "name": "update_status", "path": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "pattern": "/^    async def update_status($/", "language": "Python", "typeref": "typename:Optional[Order]", "kind": "member", "signature": "( self, db: AsyncSession, *, order_id: int, status: OrderStatus )", "scope": "OrderCRUD", "scopeKind": "class"}], "filename": "/home/kavia/workspace/API-Performance-Optimization-L.0.8/app/crud/order.py", "hash": "a21cae913c39e62f50cf022a781015cd", "format-version": 4, "code-base-name": "default", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order = OrderCRUD(Order)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "order_item = OrderItemCRUD(OrderItem)", "scope": "", "scopeKind": "", "description": "unavailable"}]}